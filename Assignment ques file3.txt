1-> What is Mutable String in Java Explain with an example?
A mutable string in Java refers to a string-like object whose value can be changed after it is created. Unlike String, which is immutable, classes like StringBuilder and StringBuffer provide mutable strings where you can modify the contents without creating a new object.

Example of Mutable String (Using StringBuilder)

public class MutableStringExample {
    public static void main(String[] args) {
        StringBuilder str = new StringBuilder("Hello");
        str.append(" World");
        System.out.println(str);  // Output: Hello World
    }
}
Here, the value of str is modified using the append() method, making it a mutable string.

2->WAP to reverse a String
“PWSKILLS”
“SLLIKSPW”

public class ReverseString {
    public static void main(String[] args) {
        String str = "PWSKILLS";
        String reversed = "";
        
        // Reversing the string manually
        for (int i = str.length() - 1; i >= 0; i--) {
            reversed += str.charAt(i);
        }
        
        System.out.println("Reversed String: " + reversed);  // Output: SLLIKSPW
    }
}

3->WAP to reverse a sentence while preserving the position
Think Twice
“kniht eciwt”

public class ReverseSentence {
    public static void main(String[] args) {
        String sentence = "Think Twice";
        String[] words = sentence.split(" ");
        StringBuilder reversedSentence = new StringBuilder();
        
        // Reversing each word in the sentence
        for (String word : words) {
            StringBuilder reversedWord = new StringBuilder(word).reverse();
            reversedSentence.append(reversedWord).append(" ");
        }
        
        System.out.println("Reversed Sentence: " + reversedSentence.toString().trim());  // Output: kniht eciwt
    }
}


4->WAP to sort a String Alphabetically

import java.util.Arrays;

public class SortString {
    public static void main(String[] args) {
        String str = "PWSKILLS";
        
        // Converting string to char array and sorting
        char[] charArray = str.toCharArray();
        Arrays.sort(charArray);
        
        // Converting char array back to string
        String sortedStr = new String(charArray);
        
        System.out.println("Sorted String: " + sortedStr);  // Output: IKKLPSSW
    }
}
